<?php

/**
 * Implements hook_node_info()
 */

function slider_node_info() {
    return array(
            'slider' => array(
                    'name' => t('Slider'),
                    'base' => 'slider',
                    'description' => t('Show defined content inside a slider.'),
                    'has_title' => TRUE,
                    'title_label' => t('Slider title')
            )
    );
}

/**
 * Implement hook_form()
 */
function slider_form($node, $form_state) {
    return node_content_form($node, $form_state);
}

/**
 * Implements hook_form_alter().
 */
function slider_form_alter(&$form, &$form_state, $form_id) {
    if ('slider_node_form' == $form_id) {
        // Disable sticky
        $form['options']['sticky']['#value'] = 0;
        // Disable promote to frontpage
        $form['options']['promote']['#value'] = 0;
        // Hide options sticky and promote elements from the content creation form
        hide($form['options']['sticky']);
        hide($form['options']['promote']);

        // Disable comments if the module is installed
        if (array_key_exists('comment_settings', $form)) {
            $form['comment_settings']['comment']['#default_value'] = 1;
            hide($form['comment_settings']);
        }

        // Hide revision information element from the content creation form
        hide($form['revision_information']);
        // Hide menu settings information element from the content creation form
        hide($form['menu']);
        // Hide path alias element from the content creation form
        hide($form['path']);
    }
}

/**
 * Implements hook_block_info().
 */
function slider_block_info() {
    $blocks = array();

    $blocks['sliderblock'] = array(
            'info' => t('Block to show the slider'),
    );

    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function slider_block_view($block_name = '') {
    if ($block_name == 'sliderblock') {

        // build the query to get all slider content type nodes
        $content_type = 'slider';
        $query = new EntityFieldQuery();
        $entities = $query->entityCondition('entity_type', 'node')
                          ->entityCondition('bundle', $content_type)
                          ->propertyCondition('status', 1)
                          ->execute();
        // get slider content-type nodes
        $nodes = entity_load('node', array_keys($entities['node']));

        //Loop through the loded nodes to create a list
        $list = array();
        foreach ($nodes as $node) {
            $slider_subtitle_field  = field_get_items('node', $node, 'slider_subtitle');
            $slider_subtitle        = field_view_value('node', $node, 'slider_subtitle', $slider_subtitle_field[0]);

            $slider_link_field      = field_get_items('node', $node, 'slider_link');
            $slider_link            = field_view_value('node', $node, 'slider_link', $slider_link_field[0]);

            $slider_image_field     = field_get_items('node', $node, 'slider_image');
            $slider_image           = field_view_value('node', $node, 'slider_image', $slider_image_field[0]);

            $options = array('absolute' => TRUE);

            $items = array(
                    'title' => $node->title,
                    'subtitle' => $slider_subtitle['#markup'],
                    'link_label' => $slider_link['#field']['label'],
                    'link_href' => $node->slider_link[$node->language][0]['url'],
                    'image_src' => file_create_url($slider_image['#item']['uri'])
            );

            $li = '';
            $li .= '<a href="'.$items['link_href'].'" class="linkban">';
            $li .= '<h3>'.$items['title'].'</h3>';
            $li .= '<span>'.$items['subtitle'].'</span>';
            $li .= '<span class="btn">'.$items['link_label'].'</span>';
            $li .= '<img src="'.$items['image_src'].'" />';
            $li .= '</a>';

            $list[] = $li;

        }

        //Return the content of the block
        $theme_args = array('items' => $list, 'type' => 'ul');
        $content = theme('item_list', $theme_args);

        // Generate the output for this View Block
        $output = '<div class="slider">';
        $output .= '<div class="wrapper">';
        $output .= '<div class="banner">';
        $output .= $content;
        $output .= '<div class="clear"></div>';

        $output .= '</div><!-- end banner -->';
        $output .= '</div>';
        $output .= '</div><!-- end .slider -->';

        $block = array(
                'subject' => t('Show Slider Nodes Block'),
                'content' => $output
        );
        return $block;
    }
}